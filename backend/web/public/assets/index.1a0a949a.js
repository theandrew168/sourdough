(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function a(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(r){if(r.ep)return;r.ep=!0;const o=a(r);fetch(r.href,o)}})();var n=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});function c(){var t=new n(16);return n!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}class l{constructor(e,a,i){this.gl=e;const r=e.createShader(e.VERTEX_SHADER);this.#e(r,a);const o=e.createShader(e.FRAGMENT_SHADER);this.#e(o,i),this.program=e.createProgram(),this.#t(this.program,r,o),e.deleteShader(r),e.deleteShader(o)}bind(){this.gl.bindShader(this.program)}unbind(){this.gl.bindShader(0)}destroy(){this.gl.deleteProgram(this.program)}#e(e,a){if(this.gl.shaderSource(e,a),this.gl.compileShader(e),!this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))throw this.gl.getShaderInfoLog(e)}#t(e,a,i){if(this.gl.attachShader(e,a),this.gl.attachShader(e,i),this.gl.linkProgram(e),!this.gl.getProgramParameter(e,this.gl.LINK_STATUS))throw this.gl.getProgramInfoLog(e);this.gl.detachShader(e,a),this.gl.detachShader(e,i)}}async function h(){console.log(c());const e=document.querySelector("#glCanvas").getContext("webgl2");if(!e){alert("Unable to initialize WebGL. Your browser or machine may not support it.");return}const i=await(await fetch("/shader/basic.vert.glsl")).text(),o=await(await fetch("/shader/basic.frag.glsl")).text(),s=new l(e,i,o);console.log(s),e.clearColor(.2,.3,.4,1),e.clear(e.COLOR_BUFFER_BIT)}await h();
